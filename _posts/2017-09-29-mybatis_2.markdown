---
author: wulei
comments: true
date: 2017-09-29 15:53:37+00:00
link: http://wulei.kim/2017/09/29/mybatis_2/
slug: mybatis_2
title: MyBatis学习总结（下）
wordpress_id: 208
categories:
- Java
tags:
- MyBatis
---

<blockquote>_接上篇。_

GitHub:https://github.com/wuleiaty/MyBatis01</blockquote>




### 动态SQL拼接


在上一篇文章的例子中，我们只实现了把表中的所有记录查询出来，加入要实现根据账户信息中的用户名和昵称查询对应的账户，就需要根据请求中的参数在MyBatis的配置文件中实现动态的改变SQL语句。上一篇中在配置文件中配置的SQL语句如下：

    
    <select id="selectUser" resultMap="UserResult">
        SELECT * FROM user WHERE 1=1
     </select>


那么这个标签怎么接收参数呢？<select>标签有一个paramerType属性，可以在这个属性中配置要接收的参数，我们需要接收用户名和昵称这两个参数，两个都是String类型的参数，也许可以像下面这样配置：

    
    <select id="selectUser" parameterType="String,String" resultMap="UserResult">
        SELECT * FROM user WHERE 1=1
      </select>


在parameterType属性中配置两个String参数。但需要注意的是，这样配置是错误的，parameterType只能接收一个参数，所以我们需要将这两个参数封装成一个参数，这正好也是面向对象中的封装的体现。需要做的就是，在DAO层中将这两个参数封装为一个User对象，然后将这个User对象传给这个SQL语句，如下：

    
    <select id="selectUser" parameterType="com.wulei.bean.User" resultMap="UserResult">
        SELECT * FROM user WHERE 1=1
        <if test="user_username != null and !&quot;&quot;.equals(user_username.trim())">AND user_username=#{user_username}</if>
        <if test="user_nickname != null and !&quot;&quot;.equals(user_nickname.trim())">AND user_nickname=#{user_nickname}</if>
    </select>


把parameterType属性设置为User类的全名，接下来有两个<if>标签，分别判断用户名和昵称两个参数，如果某一个参数不为null并且不为空格，那么在SQL语句中添加相应的参数，用#{...}代替参数。

关于<if>标签中如何进行条件的判断，这里需要用到OGNL表达式，这是一个功能强大的表达式语言，OGNL并不是MyBatis专有的表达式语言。OGNL表达式强大到可以直接调用对象本身的方法，比如我们这里的equals()方法和trim()方法。

但是需要用HTML转义来对引号和&来进行转义，如下：

    
    <if test="user_username != null &amp;&amp; !&quot;&quot;.equals(user_username.trim())">AND user_username=#{user_username}</if>


但是OGNL表达式有自己的逻辑连接词，可以使用and来代替&&（&amp;&amp;）。

接下来对例子进行改造：



 	
  * DAO层


在DAO层中将用户名和昵称这两个参数封装成一个User对象，并且在SqlSession的查询方法中加入这个参数：

    
    package com.wulei.dao;
    import java.io.IOException;
    import java.util.ArrayList;
    import java.util.List;
    
    import org.apache.ibatis.session.SqlSession;
    
    import com.wulei.bean.*;
    import com.wulei.util.DBAccess;
    
    public class UserDAO {
    
    	public List<User> getUserList(String username, String nickname){
    		List<User> userList = new ArrayList<User>();
    		DBAccess dbAccess = new DBAccess();
    		SqlSession sqlSession = null;
    		
    		User user = new User();
    		user.setUser_username(username);
    		user.setUser_nickname(nickname);
    		
    		try {
    			sqlSession = dbAccess.getSqlSession();
    			userList = sqlSession.selectList("User.selectUser",user);
    		} catch (IOException e) {
    			e.printStackTrace();
    		}finally {
    			if(sqlSession != null) {
    				sqlSession.close();
    			}
    		}
    		return userList;
    	}
    }
    





 	
  * Service层中只需要对参数进行一些修改即可。

 	
  * 在Servlet中读取来自请求的参数，并且将参数传给Service即可：



    
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    	String username = request.getParameter("username");
    	String nickname = request.getParameter("nickname");
    		
    	UserService userService = new UserService();
    	List<User> userList = userService.getUserList(username, nickname);
    	request.setAttribute("userList", userList);
    	request.getRequestDispatcher("/WEB-INF/showUser.jsp").forward(request, response);
    }


运行：根据URL的请求不同，可以得到不同的查询结果：

![](http://wulei.kim/wp-content/uploads/2017/09/J7FCA86POQQ0X02EMB.png)


### 使用Log4j调试


在使用JDBC进行数据库相关的编程时，如果遇到了数据库操作的问题，在debug的时候，可以使用添加断点进行调试或者可以直接将SQL语句输出到控制台来检查SQL语句。但是在MyBatis中，就没有办法这么做了，因为SQL语句执行的过程都被封装在了框架中，没有办法设置断点或者输出到控制台中。要调试SQL语句，这里使用Log4j输出日志的形式进行调试。

首先在工程中导入Log4j的jar包。然后在/src目录下添加配置文件log4j.properties如下：

    
    ### Global logging configuration
    log4j.rootLogger=DEBUG, Console
    
    ### Console output...
    log4j.appender.Console=org.apache.log4j.ConsoleAppender
    log4j.appender.Console.layout=org.apache.log4j.PatternLayout
    log4j.appender.Console.layout.ConversionPattern=%5p [%t] - %m%n
    log4j.logger.org.apache=ERROR


具体配置文件的配置不想写了。运行工程，在控制台可见：

![](http://wulei.kim/wp-content/uploads/2017/09/13HFZL227USJDGVKBHV0.png)

这样就可以很方便的进行调试了。
