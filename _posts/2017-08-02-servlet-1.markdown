---
author: wulei
comments: true
date: 2017-08-02 08:26:29+00:00
link: http://wulei.kim/2017/08/02/servlet-1/
slug: servlet-1
title: Servlet简介与生命周期
wordpress_id: 133
categories:
- Java
- Servlet
tags:
- Servlet
- 生命周期
---

## What is Servlet?


Java Servlet 是运行在Web服务器或应用服务器上的程序，是作为客户端请求（来自Web浏览器或者HTTP客户端）和HTTP服务器上的数据库或应用程序之间的中间层。使用Servlet，可以收集来自网页表单的输入，创建动态网页并呈现来自数据库或其他数据源的记录。

Java Servlet与CGI（公共网关接口）实现的程序相比，有一些优势：

1.Servlet默认单实例多线程，性能明显更好。

2.因为使用Java编写，所以Servlet是独立于平台的 。

3.Java类库的全部功能对Servlet来说都是可用的。可以通过sockets和RMI机制与applets、数据库或者其他软件进行交互。


## Servlet架构


![](http://wulei.kim/wp-content/uploads/2017/08/img_0336-1024x768.png)

上图显示了Servlet在Web应用程序中的位置。


## Servlet生命周期


Servlet生命周期指的是从被创建到毁灭的过程。

1.在第一次请求时，Servlet容器会创建Servlet实例。

2.Servlet通过调用init()方法进行初始化。

3.Servlet通过调用service()方法来处理客户端的请求。

4.Servlet通过调用destory()方法终止。

5.最后，Servlet由JVM的垃圾回收器进行回收。


### init()方法


init()方法只调用一次。它在第一次创建Servlet时被调用，在后续每次用户请求时不再调用。Servlet创建于用户第一次请求该Servlet的URL时，也可以指定Servlet在服务器第一次启动时被加载。

每一个用户请求都会产生一个新的线程，适当的时候移交给doGet()方法或者doPost()方法。init()方法简单的创建和初始化一些数据，这些数据将用于Servlet的整个生命周期。

init()方法的定义：

    
    public void init() throws ServletException{
            //init code
    }
    





### service()方法


service()方法是执行实际任务的主要方法。Servlet容器调用该方法来处理来自客户端的请求，并把格式化的响应写回客户端。

每次服务器接收到一个请求，服务器会产生一个新的线程并调用服务，service()方法检查HTTP请求的类型（GET、POST、PUT、DELETE等），并在适当的时候调用doGet(), doPost(), doPut(), doDelete()等方法。

service()方法的定义：

    
    public void service(ServletRequest request, 
                                   ServletResponse response) throws 
            ServletException,IOException{
    }




service()方法由容器调用，所以我们不用对service()方法做任何动作，只需要根据客户端的请求类型来重载doGet()方法或doPost()方法等即可。

下面是两种方法的定义：


### doGet()方法



    
    public void doGet(HttpServletRequest request,
                                  HttpServletResposnse response)
            throws ServletException, IOException{
    //Servlet code
    }




### doPost()方法



    
    public void doPost(HttpServletRequest request,
                                   HttpServletResponse response)
            throws ServletException, IOException{
    //Servlet code
    }




### destory()方法


destory()方法只会被调用一次，在Servlet生命周期结束时被调用。destory()方法可以让Servlet关闭数据库连接，停止后台线程，把Cookie列表或点击计数器写入磁盘，并执行其他类似的清理活动。

调用destory()方法后，Servlet被标记为垃圾回收。destory()方法定义：

    
    public void destory(){
    
    }



