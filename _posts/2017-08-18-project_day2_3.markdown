---
author: wulei
comments: true
date: 2017-08-18 15:13:52+00:00
link: http://wulei.kim/2017/08/18/project_day2_3/
slug: project_day2_3
title: micblog项目开发Day 2 & 3
wordpress_id: 168
categories:
- JSP
- Servlet
tags:
- micblog
---

进行到了第三天，项目已经80%完成，由于昨天没有记录，所以今天将两天的内容总结在一起。昨天的内容最多，也最重要，基本完成了整个项目的整体框架，且完成了大部分DAO层开发。今天则主要是进行Controller和View部分的开发。目前总的代码已经上一千行，所以只挑几个部分做记录。目前项目的结构如下：

![](http://wulei.kim/wp-content/uploads/2017/08/project_struct1.png) ![](http://wulei.kim/wp-content/uploads/2017/08/project_struct2.png)





























 	
  * 在几个文件的方法中，都有一个执行SQL语句后返回的ResultSet对象，根据对象中有无记录来判断数据库中有无此用户等的模块，类似下列代码：



    
                   try {
    			if(rs.next())
    				return true;//写入成功，返回true
    			return false;
    		}catch(SQLException ex) {
    			ex.printStackTrace();
    			return false;
    		}finally {
    			dbconn.closeConnection();
    		}


直接使用next()方法判断对象中是否有记录，有则返回true，由于这个方法有可能抛出异常，所以必须放在try/catch语句中。抛出异常时，也会返回false。也有下面这种方法也可以判断有无记录：

    
                    try {
    			rs.next();
    			//登录成功，返回用户ID
    			return rs.getInt("user_id");
    		}catch(SQLException ex) {
    			ex.printStackTrace();
    			//System.out.println("login error");
    			return -1;
    		}finally {
    			dbconn.closeConnection();
    		}


直接执行next()方法然后判断是否抛出异常，进而判断对象中是否有记录。这种方法写法更简洁，不过我觉得不应该使用这种方法，因为这种方法抛出异常的几率会大很多，因为只要对象中没有记录就会抛出异常，而上面一种方法则只会在方法执行错误是才会抛出，这种抛出异常的几率非常小，也就减轻了服务器的压力。



 	
  * Item对象的排序


Item对象是每个微博记录的实例，在比如显示关注者微博列表的时候，需要取出所有关注者所发过的所有微博，而由于所有用户发过的微博都存储在同一张数据表中，多个用户在不同的时间添加微博，则会造成数据表中记录的时间乱序。所以在显示微博列表的时候，取出来的Item集合都是乱序的，不能就乱序的显示在页面上。需要将微博按发布时间倒序显示在页面上，这个类在itemSortDAO.java中：

    
    package com.DAO;
    import java.text.SimpleDateFormat;
    import java.util.Comparator;
    import java.util.Date;
    
    import com.bean.*;
    
    public class itemSortDAO implements Comparator<Object>{
    	//将微博按发布时间倒序排序
    	@Override
    	public int compare(Object o1, Object o2) {
    		// TODO Auto-generated method stub
    		Item item1 = (Item)o1;
    		Item item2 = (Item)o2;
    		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    		Date d1,d2;
    		try {
    			d1 = format.parse(item1.getItem_time());
    			d2 = format.parse(item2.getItem_time());
    		}catch(Exception ex) {
    			ex.printStackTrace();
    			return 0;
    		}
    		if(d1.before(d2))
    			return 1;
    		else
    			return -1;
    	}
    
    }


Java提供了Comparator接口来为集合进行排序。ItemSortDAO类正是实现了Comparator接口。该接口必须实现一个compara方法。首先将两个比较对象的日期提取出来，在经过Date类的解码。最后使用Date类的时间比较方法before()。调用该接口的方法如下：

    
    itemSortDAO sortDAO = new itemSortDAO();
    Collections.sort(items, sortDAO);


Collections类的sort方法接收两个参数，第一个是要排序的集合，第二个是排序使用的接口。



 	
  * 在显示关注者所有的微博时，需要用到将多个集合合并。因为不止关注一个人，而且每个人也有多条微博。下面是代码：



    
    ArrayList<User> followUsers = new followDAO().getFollows(user);
    ArrayList<Item> items = new ArrayList<Item>();
    
    for(User followUser : followUsers) {
    	ArrayList<Item> everyFollowItems = new getItemDAO().getItemByUser(followUser);
    	for(Item everyFollowItem : everyFollowItems) {
    		items.add(everyFollowItem);
    	}
    }





 	
  * 项目还剩下一些小功能，明天继续。估计明天能够完成，然后就开始**Spring MVC**的学习了！


